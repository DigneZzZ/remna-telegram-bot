#!/usr/bin/env python3
"""
Test admin user authorization
"""
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

def test_admin_config():
    """Test admin user configuration"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ADMIN_USER_IDS")
    print("=" * 50)
    
    # Get raw value
    raw_admin_ids = os.getenv("ADMIN_USER_IDS", "")
    print(f"Raw ADMIN_USER_IDS: '{raw_admin_ids}'")
    
    # Parse admin IDs
    if raw_admin_ids:
        try:
            admin_ids = [int(id.strip()) for id in raw_admin_ids.split(",") if id.strip()]
            print(f"Parsed ADMIN_USER_IDS: {admin_ids}")
            print(f"Type of first ID: {type(admin_ids[0]) if admin_ids else 'No IDs'}")
            
            # Test authorization for known user
            test_user_id = 127192647
            print(f"\nüß™ –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
            print(f"Is authorized: {test_user_id in admin_ids}")
            
            # Check all configured IDs
            print(f"\nüë• –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ admin IDs:")
            for idx, admin_id in enumerate(admin_ids):
                print(f"  {idx + 1}. {admin_id} (type: {type(admin_id)})")
                
        except ValueError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ADMIN_USER_IDS: {e}")
    else:
        print("‚ùå ADMIN_USER_IDS –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    
    # Test other important env vars
    print(f"\nüîß –î—Ä—É–≥–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    print(f"API_BASE_URL: {os.getenv('API_BASE_URL', 'NOT SET')}")
    print(f"TELEGRAM_BOT_TOKEN: {'SET' if os.getenv('TELEGRAM_BOT_TOKEN') else 'NOT SET'}")
    print(f"REMNAWAVE_API_TOKEN: {'SET' if os.getenv('REMNAWAVE_API_TOKEN') else 'NOT SET'}")

if __name__ == "__main__":
    test_admin_config()
