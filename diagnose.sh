#!/bin/bash
# Automated Diagnostic Script for Remnawave Admin Bot
# This script will automatically diagnose and attempt to fix common issues

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m' # No Color

print_color() {
    echo -e "${2}${1}${NC}"
}

print_step() {
    echo
    print_color "üîπ –®–∞–≥ $1: $2" "$CYAN"
}

check_docker() {
    if command -v docker &> /dev/null; then
        DOCKER_VERSION=$(docker --version)
        print_color "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $DOCKER_VERSION" "$GREEN"
        return 0
    else
        print_color "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker." "$RED"
        print_color "   –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: https://docs.docker.com/get-docker/" "$YELLOW"
        return 1
    fi
}

check_docker_compose() {
    if command -v docker-compose &> /dev/null; then
        print_color "‚úÖ docker-compose –Ω–∞–π–¥–µ–Ω" "$GREEN"
        return 0
    elif docker compose version &> /dev/null; then
        print_color "‚úÖ docker compose –Ω–∞–π–¥–µ–Ω" "$GREEN"
        alias docker-compose='docker compose'
        return 0
    else
        print_color "‚ùå docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω" "$RED"
        return 1
    fi
}

check_env_file() {
    if [ -f ".env" ]; then
        print_color "‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω" "$GREEN"
        
        REQUIRED_VARS=("TELEGRAM_BOT_TOKEN" "REMNAWAVE_API_TOKEN" "ADMIN_USER_IDS" "API_BASE_URL")
        
        for var in "${REQUIRED_VARS[@]}"; do
            if grep -q "^${var}=" .env; then
                VALUE=$(grep "^${var}=" .env | cut -d'=' -f2- | tr -d '"' | tr -d "'" | xargs)
                if [ -n "$VALUE" ] && [ "$VALUE" != "your_token_here" ]; then
                    print_color "‚úÖ $var –Ω–∞—Å—Ç—Ä–æ–µ–Ω" "$GREEN"
                else
                    print_color "‚ùå $var –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π" "$RED"
                fi
            else
                print_color "‚ùå $var –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ .env" "$RED"
            fi
        done
        return 0
    else
        print_color "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω" "$RED"
        return 1
    fi
}

get_telegram_id() {
    print_step "1" "–ó–∞–ø—É—Å–∫ ID –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Telegram ID"
    
    if [ ! -f ".env" ]; then
        echo -n "–í–≤–µ–¥–∏—Ç–µ TELEGRAM_BOT_TOKEN: "
        read -r BOT_TOKEN
        echo "TELEGRAM_BOT_TOKEN=$BOT_TOKEN" > .env
    fi
    
    print_color "ü§ñ –ó–∞–ø—É—Å–∫–∞—é ID –±–æ—Ç–∞..." "$YELLOW"
    print_color "üì± –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—à–µ–≥–æ Telegram ID" "$CYAN"
    print_color "‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è ID" "$YELLOW"
    
    docker compose -f docker-compose-debug.yml --profile id-bot up --build
}

start_debug_mode() {
    print_step "2" "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏"
    
    if ! check_env_file; then
        print_color "‚ùå –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º debug —Ä–µ–∂–∏–º–∞" "$RED"
        return 1
    fi
    
    print_color "üêõ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞ –≤ debug —Ä–µ–∂–∏–º–µ..." "$YELLOW"
    print_color "üìã –°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º" "$CYAN"
    
    # Stop any running containers first
    docker compose -f docker-compose-prod.yml down 2>/dev/null || true
    docker compose -f docker-compose-debug.yml down 2>/dev/null || true
    
    # Start in debug mode
    docker compose -f docker-compose-debug.yml --profile debug up --build
}

check_environment() {
    print_step "3" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    
    CONTAINER_NAME="remnawave-admin-bot-debug"
    
    if docker ps --format "table {{.Names}}" | grep -q "$CONTAINER_NAME"; then
        print_color "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME —Ä–∞–±–æ—Ç–∞–µ—Ç" "$GREEN"
        
        echo
        print_color "üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..." "$CYAN"
        docker exec "$CONTAINER_NAME" python check_env.py
        
        echo
        print_color "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:" "$CYAN"
        docker logs --tail 20 "$CONTAINER_NAME"
    else
        print_color "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω" "$RED"
        print_color "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./diagnose.sh debug" "$YELLOW"
    fi
}

run_full_diagnostic() {
    print_color "üîç –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê REMNAWAVE ADMIN BOT" "$MAGENTA"
    print_color "=================================================" "$MAGENTA"
    
    # Step 1: Check Docker
    print_step "1" "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker"
    if ! check_docker || ! check_docker_compose; then
        return 1
    fi
    
    # Step 2: Check .env file
    print_step "2" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    ENV_EXISTS=0
    check_env_file && ENV_EXISTS=1
    
    # Step 3: Check running containers
    print_step "3" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    CONTAINERS=$(docker ps --format "table {{.Names}}\t{{.Status}}" | grep remnawave || true)
    if [ -n "$CONTAINERS" ]; then
        print_color "‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã Remnawave:" "$GREEN"
        echo "$CONTAINERS" | while read -r line; do
            print_color "   $line" "$NC"
        done
    else
        print_color "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã Remnawave –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã" "$YELLOW"
    fi
    
    # Step 4: Recommendations
    print_step "4" "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
    
    if [ $ENV_EXISTS -eq 0 ]; then
        print_color "üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:" "$YELLOW"
        print_color "1. –ü–æ–ª—É—á–∏—Ç–µ Telegram ID: ./diagnose.sh telegram-id" "$NC"
        print_color "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º ID" "$NC"
        print_color "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ debug —Ä–µ–∂–∏–º: ./diagnose.sh debug" "$NC"
    elif [ -z "$CONTAINERS" ]; then
        print_color "üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:" "$YELLOW"
        print_color "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ debug —Ä–µ–∂–∏–º: ./diagnose.sh debug" "$NC"
        print_color "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏" "$NC"
        print_color "3. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /start –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–≤–µ—Ç" "$NC"
    else
        print_color "üéØ –ë–û–¢ –†–ê–ë–û–¢–ê–ï–¢! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:" "$GREEN"
        print_color "1. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /start" "$NC"
        print_color "2. –ï—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ ADMIN_USER_IDS" "$NC"
        print_color "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: ./diagnose.sh check-env" "$NC"
    fi
}

# Main execution logic
print_color "ü§ñ Remnawave Admin Bot - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ v2.0" "$MAGENTA"

case "${1:-}" in
    "telegram-id"|"id")
        get_telegram_id
        ;;
    "debug")
        start_debug_mode
        ;;
    "check-env"|"env")
        check_environment
        ;;
    "full"|"diagnostic"|"")
        run_full_diagnostic
        ;;
    *)
        print_color "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:" "$CYAN"
        print_color "  ./diagnose.sh [full]         # –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)" "$NC"
        print_color "  ./diagnose.sh telegram-id    # –ü–æ–ª—É—á–∏—Ç—å Telegram ID" "$NC"
        print_color "  ./diagnose.sh debug          # –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏" "$NC"
        print_color "  ./diagnose.sh check-env      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è" "$NC"
        echo
        print_color "–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç: ./diagnose.sh" "$YELLOW"
        ;;
esac
